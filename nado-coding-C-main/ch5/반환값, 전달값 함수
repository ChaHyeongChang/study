#include <stdio.h>

//반환값이 없는 함수
/*
void function_without_return(); //void는 작업을 완료한 후에 아무것도 반환하지 않겠다는 의미로 사용

int main(void){

    function_without_return();

    return 0;

}

void function_without_return(){
    printf("반환값이 없는 함수\n");
}
*/

//반환값이 있는 함수
/*
int function_with_return();
void p(int num);

int main(void){
    int ret;
    ret = function_with_return();
    p(ret);  //printf("%d\n", ret);

    return 0;
}

int function_with_return(){
    printf("반환값이 있는 함수\n");
    return 10;
}

void p(int num){
    printf("%d\n", num);
}
*/

//파라미터(전달값)가 없는 함수
/*
void function_without_params();

int main(void){
    function_without_params();
    
    return 0;

}

void function_without_params(){
    printf("전달값이 없는 함수\n");
}
*/

//파라미터(전달값)가 있는 함수
/*
void function_with_params(int num1, int num2, int num3);

int main(void){

    function_with_params(1, 2, 3);

    return 0;

}

void function_with_params(int num1, int num2, int num3){
    printf("전달값이 있는 함수이고 전달값은 %d, %d, %d입니다잇\n", num1, num2, num3);
}
*/

//반환값과 파라미터(전달값)가 있는 함수
//사과를 먹었을 때 전체중 몇개가 있는지 확인하는 함수
int apple(int total, int ate);

int main(void){

    printf("사과 5개 중에서 2개를 먹으면 %d개가 남습니다.\n", apple(5, 2));
    /*
    int ret = apple(5, 2);
    printf("사과 5개 중에서 2개를 먹으면 %d개가 남습니다.\n", ret);
    */

    return 0;
}

int apple(int total, int ate){
    printf("전달값과 반환값이 있는 함수\n");
    return total - ate;
}

